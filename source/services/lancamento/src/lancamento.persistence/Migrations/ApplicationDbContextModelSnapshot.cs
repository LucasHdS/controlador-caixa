// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Persistence;

#nullable disable

namespace Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Domain.Lancamentos.Lancamento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("PK_LANCAMENTO");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DT_CADASTRO");

                    b.Property<Guid>("NumeroLancamento")
                        .HasColumnType("uuid")
                        .HasColumnName("NUM_LANCAMENTO");

                    b.Property<Guid>("TipoLancamentoId")
                        .HasColumnType("uuid")
                        .HasColumnName("FK_TP_LANCAMENTO");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("VALOR");

                    b.HasKey("Id");

                    b.HasIndex("TipoLancamentoId");

                    b.ToTable("T_LANCAMENTO", "lancamento");
                });

            modelBuilder.Entity("Domain.Naturezas.Natureza", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("PK_NATUREZA");

                    b.Property<string>("CodigoNatureza")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("CD_NATUREZA");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DT_CADASTRO");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("TX_DESCRICAO");

                    b.HasKey("Id");

                    b.ToTable("T_NATUREZA", "lancamento");

                    b.HasData(
                        new
                        {
                            Id = new Guid("08a6ac05-1f1c-41cb-adc2-2113820719e0"),
                            CodigoNatureza = "DEBITO",
                            DataCadastro = new DateTime(2025, 4, 13, 0, 0, 0, 0, DateTimeKind.Utc),
                            Descricao = "Débito"
                        },
                        new
                        {
                            Id = new Guid("cc934f0b-7ac0-43c4-9d50-7c2fc4b03d72"),
                            CodigoNatureza = "CREDITO",
                            DataCadastro = new DateTime(2025, 4, 13, 0, 0, 0, 0, DateTimeKind.Utc),
                            Descricao = "Crédito"
                        });
                });

            modelBuilder.Entity("Domain.TipoLancamentos.TipoLancamento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("PK_TP_LANCAMENTO");

                    b.Property<string>("CodigoTipoLancamento")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("CD_TIPO_LANCAMENTO");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DT_CADASTRO");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("TX_DESCRICAO");

                    b.Property<Guid>("NaturezaId")
                        .HasColumnType("uuid")
                        .HasColumnName("FK_NATUREZA");

                    b.HasKey("Id");

                    b.HasIndex("NaturezaId");

                    b.ToTable("T_TIPO_LANCAMENTO", "lancamento");

                    b.HasData(
                        new
                        {
                            Id = new Guid("94c0f65a-661f-4656-beac-8bff9f8ea7f6"),
                            CodigoTipoLancamento = "COMPRA",
                            DataCadastro = new DateTime(2025, 4, 13, 0, 0, 0, 0, DateTimeKind.Utc),
                            Descricao = "Compra",
                            NaturezaId = new Guid("08a6ac05-1f1c-41cb-adc2-2113820719e0")
                        },
                        new
                        {
                            Id = new Guid("04d97159-bcf6-4cfb-b271-64917b800125"),
                            CodigoTipoLancamento = "VENDA",
                            DataCadastro = new DateTime(2025, 4, 13, 0, 0, 0, 0, DateTimeKind.Utc),
                            Descricao = "Venda",
                            NaturezaId = new Guid("cc934f0b-7ac0-43c4-9d50-7c2fc4b03d72")
                        });
                });

            modelBuilder.Entity("Domain.Lancamentos.Lancamento", b =>
                {
                    b.HasOne("Domain.TipoLancamentos.TipoLancamento", "TipoLancamento")
                        .WithMany()
                        .HasForeignKey("TipoLancamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoLancamento");
                });

            modelBuilder.Entity("Domain.TipoLancamentos.TipoLancamento", b =>
                {
                    b.HasOne("Domain.Naturezas.Natureza", "Natureza")
                        .WithMany()
                        .HasForeignKey("NaturezaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Natureza");
                });
#pragma warning restore 612, 618
        }
    }
}
