services:
  postgres:
    image: postgres:15
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"

  lancamentoService:
    build:
      context: ./services/lancamento
      dockerfile: Dockerfile
    container_name: lancamentoService
    environment:
      - DB_CONNECTION=Host=postgres;Port=5432;Database=${POSTGRES_LANCAMENTOS_DB};Username=${POSTGRES_USER};Password=${POSTGRES_PASSWORD}
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_PASSWORD=${RABBITMQ_DEFAULT_PASS}
    depends_on:
      - postgres
      - rabbitmq
      - redis
    ports:
      - "5001:80"

  consolidadorService:
    build:
      context: ./services/consolidador
      dockerfile: Dockerfile
    container_name: consolidadorService
    environment:
      - DB_CONNECTION=Host=postgres;Port=5432;Database=${POSTGRES_CONSOLIDADOR_DB};Username=${POSTGRES_USER};Password=${POSTGRES_PASSWORD}
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_PASSWORD=${RABBITMQ_DEFAULT_PASS}
      - REDIS_HOST=redis
    depends_on:
      - postgres
      - rabbitmq
      - redis
    ports:
      - "5002:80"

  apigateway:
    build:
      context: ./gateways/portal.gateway
      dockerfile: Dockerfile
    container_name: apigateway
    ports:
      - "5000:80"
    depends_on:
      - lancamentoService
      - consolidadorService


volumes:
  postgres_data: